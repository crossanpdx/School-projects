
import javax.swing.JOptionPane;

/* KET1 TASK1 Specs:
 * 
 1. Create a GUI that allows a user to enter the following into labeled textfields:
 • Number of minutes for tutoring session (should be a positive decimal number)
 • Earnings in dollars and cents received (should be positive decimal number)
 a. GUI should be built using javax.swing components jButton, jLabel, jTextField, jTextArea, jFrame, and jPanel.
 2. Implement functionality for each of the following application buttons:
 • “Quit” button: Should exit application
 • “Enter” button: Accepts entered number of minutes and earnings; as earnings information is entered, it is stored in a two-dimensional array
 • “Run Report” button: Calculates total minutes of tutoring provided, average wages earned per hour, total earned to date, and determines if average wage per hour is below, average, or above minimum wage
 Note: For an example, see the attached “Sample GUI.”
 3. Use a two-dimensional array to store the entered minutes tutored and earnings received information for each tutoring session, as illustrated in the attached “Two-Dimensional Array.”
 4. Implement the “Run Report” button to iterate through the two-dimensional array using a nested for-loop to display the earnings data to the jTextArea, as illustrated in the attached “Earnings Entered.”
 5. Implement the “Run Report” button to calculate the following:
 • Total minutes tutoring provided (as a decimal number)
 • Average wage per hour (in dollars and cents)
 • Total earnings (in dollars and cents)
 • Wage analysis, determined based on comparison of average per hour earnings and current minimum wage, using the following logic:
 - if average wages per hour is < minimum wage, then below average
 - if average wages per hour is ≥ minimum wage AND ≤ minimum wage × 2.00, then average
 - if average wages per hour is > minimum wage × 2.00, then above average
 6. Display resulting calculations in GUI text area in the required format, as illustrated in the attached “Calculations Display.”
 Note: All results from calculations should be viewable in the text area. Consider appending to the text area as you write out information.
 7. Use exceptions to handle invalid user entries for the following situations:
 • If minutes entered is less than or equal to zero, throw exception.
 • Tutors should not tutor for longer than 4 hours per day. If minutes entered is greater than 60 × 4 = 240 minutes, throw exception.
 • Tutors must be paid for their tutoring service. If earnings entered is not greater than or equal to zero, throw exception.
 */
/**
 *
 * @author Ryan Crossan; Student ID: 00225067
 */
public class tutorWageGenerator extends javax.swing.JFrame {
    //Declaring 2-dimensional array

    private double[][] time_pay;
    //declaring number of rows for array
    private final int num_rows = 20;
    //declaring number sessions to start as this will be an array that
    //receives data as user enters it into application
    int num_sessions = 0;
    final double min_wage = 6.55;

    /**
     * Creates new form tutorWageGenerator
     */
    public tutorWageGenerator() {
        super("Tutor Wage Generator");
        //Initialize GUI components
        initComponents();

        //array set up using row variable set up previously and declaring columns
        //hardcoded as 2
        time_pay = new double[num_rows][2];
    }
    String time_Str, price_Str;
    double tutor_Time, paymnt_Amt;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Enter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Run Report");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Quit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Tutoring time in minutes:");

        jLabel2.setText("Payment for session in dollars and cents:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            //grabs input from text fields
            time_Str = jTextField1.getText();
            price_Str = jTextField2.getText();

            tutor_Time = paymnt_Amt = 0;

            //validate users entry
            if (time_Str == null || time_Str.length() == 0) {
                JOptionPane.showMessageDialog(tutorWageGenerator.this,
                        "Field must contain a valid time.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            try {
                tutor_Time = Double.parseDouble(time_Str);
            } catch (Exception ex) { 
                JOptionPane.showMessageDialog(tutorWageGenerator.this,
                        "Entered Time is not valid.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                //clears field
                jTextField1.setText("");
                return;
            }
            //validate user entry
            if (price_Str == null || price_Str.length() == 0) {
                JOptionPane.showMessageDialog(tutorWageGenerator.this,
                        "Field must contain a valid payment.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            try {
                paymnt_Amt = Double.parseDouble(price_Str);
            } catch (Exception ex) { 
                JOptionPane.showMessageDialog(tutorWageGenerator.this,
                        "Entered Payment is not valid.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                //clears field
                jTextField2.setText("");
                return;
            }
            //create exception for invalid entries
            if (tutor_Time <= 0) {
                jTextField1.setText("");
                throw new Exception();
            }

            if (tutor_Time > 240) {
                jTextField1.setText("");
                throw new Exception();
            }

            if (paymnt_Amt <= 0) {
                jTextField2.setText("");
                throw new Exception();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(tutorWageGenerator.this,
                    "Something's wrong, please try again!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        //resets fields to be empty
        jTextField1.setText("");
        jTextField2.setText("");
        
        time_pay[num_sessions][0] = tutor_Time;
        time_pay[num_sessions][1] = paymnt_Amt;

        num_sessions++;

        //output entered data to the text area
        jTextArea1.append("Minutes = " + time_Str + "\t " + "Earning = $" + price_Str + "\n");


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        jTextArea1.append("\n******************************************");

        //calculating minutes
        double totalMinutes = 0;
        for (int i = 0; i < num_sessions; i++) {
            totalMinutes += time_pay[i][0];
        }

        //calculating earnings
        double totalEarning = 0;
        for (int i = 0; i < num_sessions; i++) {
            totalEarning += time_pay[i][1];
        }

        //calculating average wage
        double averageWage = (totalEarning / totalMinutes) * 60;

        //output all information to text area
        jTextArea1.append("\n\nReport of your wages to Date:\n");
        jTextArea1.append("\nTotal Minutes Spent Tutoring = " + String.valueOf(totalMinutes));
        jTextArea1.append("\nTotal Earnings = $" + String.valueOf(totalEarning));
        jTextArea1.append("\nAverage Per Hour Wage = $" + String.format("%.2f", averageWage));
        jTextArea1.append("\n\nMinimum Wage is Currently  = $" + String.format("%.2f", min_wage));

        if (averageWage < min_wage) {
            jTextArea1.append("\nYour average wages per hour are below average");
        } else if (averageWage >= min_wage && averageWage <= min_wage * 2.0) {
            jTextArea1.append("\nYour average wages per hour are average");
        } else if (averageWage > min_wage * 2.0) {
            jTextArea1.append("\n\nYour average wages per hour are above average");
        }
        jTextArea1.append("\n\n");
        return;

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tutorWageGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tutorWageGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tutorWageGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tutorWageGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tutorWageGenerator().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
